- Сервис развернут на двух нодах-контейнерах на одной виртуалке через compose. PostgreSQL тоже контейнеризован и установлен на другой виртуальной машине,
БД хранится в docker volume. Выбрал такое решение из-за удобства и умения работать с Docker.
- Любая нода восстанавливается в течение 1-2 секунд после падения через авторестарт компоуза.
Хэлсчек работает через curl /ping и grep - в случае ответа, отличного от pong - контейнер самоуничтожается.
- Запросы к БД выполняются быстро благодаря индексированию и закручиванию гаек в конфиге PostgreSQL.
Первоначальное наполнение БД данными реализовано через дамп и рестор.
- В роли балансировщика выступает контейнер с nginx. Он же реализует http, https, http3 и кэширование через встроенные модули.
Сертификат не самоподписанный, выданный на определенное доменное имя. DNS Resolve реализован через внешний DNS Yandex Cloud и мой личный домен с NS записью.
- GET /long_dummy кэширован через nginx.
- Графики не сделал, так как не успел, уехал в другой город. Хотел реализовать решение через установку
Prometheus в контейнеры с bingo и nginx. Данные бы передавались на Grafana, установленный на виртуальной машине-хосте.
Prometheus на nginx возвращал бы RPS, на bingo - из логов брал бы строчки с [error] и пускал их в Grafana.
Очистку логов реализовал бы либо через logrotate, либо через скрипт-костыль.
- Развертывание реализовал через Terraform и cloud-init. Других инструментов, к сожалению, просто не знаю.
